// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in C:\Users\ysant\source\repos\ForAndForEachComparison\ForAndForEachComparison\bin\Release\netcoreapp2.2\21e7740f-0fdc-4fd0-8439-9d33cf90c76e
// command took 2.93s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in C:\Users\ysant\source\repos\ForAndForEachComparison\ForAndForEachComparison\bin\Release\netcoreapp2.2\21e7740f-0fdc-4fd0-8439-9d33cf90c76e
// command took 14.65s and exited with 1
// start dotnet build -c Release  --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in C:\Users\ysant\source\repos\ForAndForEachComparison\ForAndForEachComparison\bin\Release\netcoreapp2.2\21e7740f-0fdc-4fd0-8439-9d33cf90c76e
// command took 4.19s and exited with 0
// ***** Done, took 00:00:22 (22.11 sec)   *****
// Found 2 benchmarks:
//   Comparison.ForLoop: DefaultJob
//   Comparison.ForEachLoop: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: Comparison.ForLoop: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "21e7740f-0fdc-4fd0-8439-9d33cf90c76e.dll" --benchmarkName "ForAndForEachComparison.Comparison.ForLoop" --job "Default" --benchmarkId 0 in C:\Users\ysant\source\repos\ForAndForEachComparison\ForAndForEachComparison\bin\Release\netcoreapp2.2\21e7740f-0fdc-4fd0-8439-9d33cf90c76e\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.6 (CoreCLR 4.6.27817.03, CoreFX 4.6.27818.02), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 362848.67 ns, 362.8487 us/op
WorkloadJitting  1: 1 op, 780033.48 ns, 780.0335 us/op

OverheadJitting  2: 16 op, 306324.51 ns, 19.1453 us/op
WorkloadJitting  2: 16 op, 516740.27 ns, 32.2963 us/op

WorkloadPilot    1: 16 op, 150974.22 ns, 9.4359 us/op
WorkloadPilot    2: 32 op, 171395.86 ns, 5.3561 us/op
WorkloadPilot    3: 64 op, 522210.35 ns, 8.1595 us/op
WorkloadPilot    4: 128 op, 1085263.97 ns, 8.4786 us/op
WorkloadPilot    5: 256 op, 1741673.63 ns, 6.8034 us/op
WorkloadPilot    6: 512 op, 3704703.18 ns, 7.2357 us/op
WorkloadPilot    7: 1024 op, 6934968.04 ns, 6.7724 us/op
WorkloadPilot    8: 2048 op, 14308271.86 ns, 6.9865 us/op
WorkloadPilot    9: 4096 op, 32891958.62 ns, 8.0303 us/op
WorkloadPilot   10: 8192 op, 53630857.09 ns, 6.5467 us/op
WorkloadPilot   11: 16384 op, 101082711.26 ns, 6.1696 us/op
WorkloadPilot   12: 32768 op, 213798095.68 ns, 6.5246 us/op
WorkloadPilot   13: 65536 op, 423033050.23 ns, 6.4550 us/op
WorkloadPilot   14: 131072 op, 875154894.45 ns, 6.6769 us/op

OverheadWarmup   1: 131072 op, 279703.45 ns, 2.1340 ns/op
OverheadWarmup   2: 131072 op, 284079.51 ns, 2.1674 ns/op
OverheadWarmup   3: 131072 op, 282256.15 ns, 2.1534 ns/op
OverheadWarmup   4: 131072 op, 323099.42 ns, 2.4651 ns/op
OverheadWarmup   5: 131072 op, 321276.06 ns, 2.4511 ns/op

OverheadActual   1: 131072 op, 236672.15 ns, 1.8057 ns/op
OverheadActual   2: 131072 op, 236672.15 ns, 1.8057 ns/op
OverheadActual   3: 131072 op, 265116.57 ns, 2.0227 ns/op
OverheadActual   4: 131072 op, 267304.60 ns, 2.0394 ns/op
OverheadActual   5: 131072 op, 332216.22 ns, 2.5346 ns/op
OverheadActual   6: 131072 op, 328569.50 ns, 2.5068 ns/op
OverheadActual   7: 131072 op, 288090.91 ns, 2.1980 ns/op
OverheadActual   8: 131072 op, 373788.83 ns, 2.8518 ns/op
OverheadActual   9: 131072 op, 366130.72 ns, 2.7934 ns/op
OverheadActual  10: 131072 op, 303407.13 ns, 2.3148 ns/op
OverheadActual  11: 131072 op, 285902.87 ns, 2.1813 ns/op
OverheadActual  12: 131072 op, 297937.05 ns, 2.2731 ns/op
OverheadActual  13: 131072 op, 366130.72 ns, 2.7934 ns/op
OverheadActual  14: 131072 op, 353731.87 ns, 2.6988 ns/op
OverheadActual  15: 131072 op, 295384.35 ns, 2.2536 ns/op
OverheadActual  16: 131072 op, 313982.62 ns, 2.3955 ns/op
OverheadActual  17: 131072 op, 286996.89 ns, 2.1896 ns/op
OverheadActual  18: 131072 op, 378529.57 ns, 2.8880 ns/op
OverheadActual  19: 131072 op, 356284.58 ns, 2.7182 ns/op
OverheadActual  20: 131072 op, 284079.51 ns, 2.1674 ns/op

WorkloadWarmup   1: 131072 op, 1159580845.97 ns, 8.8469 us/op
WorkloadWarmup   2: 131072 op, 563270232.92 ns, 4.2974 us/op
WorkloadWarmup   3: 131072 op, 1861518348.47 ns, 14.2023 us/op
WorkloadWarmup   4: 131072 op, 595267651.04 ns, 4.5415 us/op
WorkloadWarmup   5: 131072 op, 568750888.89 ns, 4.3392 us/op
WorkloadWarmup   6: 131072 op, 536520080.67 ns, 4.0933 us/op
WorkloadWarmup   7: 131072 op, 8104994912.83 ns, 61.8362 us/op
WorkloadWarmup   8: 131072 op, 601412739.45 ns, 4.5884 us/op

// BeforeActualRun
WorkloadActual   1: 131072 op, 531604666.34 ns, 4.0558 us/op
WorkloadActual   2: 131072 op, 523158132.73 ns, 3.9914 us/op
WorkloadActual   3: 131072 op, 521559410.54 ns, 3.9792 us/op
WorkloadActual   4: 131072 op, 530986547.25 ns, 4.0511 us/op
WorkloadActual   5: 131072 op, 543049168.73 ns, 4.1431 us/op
WorkloadActual   6: 131072 op, 636069710.71 ns, 4.8528 us/op

OutOfMemoryException!
BenchmarkDotNet continues to run additional iterations until desired accuracy level is achieved. It's possible only if the benchmark method doesn't have any side-effects.
If your benchmark allocates memory and keeps it alive, you are creating a memory leak.
You should redesign your benchmark and remove the side-effects. You can use `OperationsPerInvoke`, `IterationSetup` and `IterationCleanup` to do that.

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.
   at System.Collections.Generic.List`1.set_Capacity(Int32 value)
   at System.Collections.Generic.List`1.AddWithResize(T item)
   at ForAndForEachComparison.Comparison.ForLoop() in C:\Users\ysant\source\repos\ForAndForEachComparison\ForAndForEachComparison\Comparison.cs:line 29
   at BenchmarkDotNet.Autogenerated.Runnable_0.WorkloadActionUnroll(Int64 invokeCount) in C:\Users\ysant\source\repos\ForAndForEachComparison\ForAndForEachComparison\bin\Release\netcoreapp2.2\21e7740f-0fdc-4fd0-8439-9d33cf90c76e\21e7740f-0fdc-4fd0-8439-9d33cf90c76e.notcs:line 728
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.RunAuto(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.Run(Int64 invokeCount, IterationMode iterationMode, Boolean runAuto, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName) in C:\Users\ysant\source\repos\ForAndForEachComparison\ForAndForEachComparison\bin\Release\netcoreapp2.2\21e7740f-0fdc-4fd0-8439-9d33cf90c76e\21e7740f-0fdc-4fd0-8439-9d33cf90c76e.notcs:line 168
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\Users\ysant\source\repos\ForAndForEachComparison\ForAndForEachComparison\bin\Release\netcoreapp2.2\21e7740f-0fdc-4fd0-8439-9d33cf90c76e\21e7740f-0fdc-4fd0-8439-9d33cf90c76e.notcs:line 49
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: Comparison.ForEachLoop: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "21e7740f-0fdc-4fd0-8439-9d33cf90c76e.dll" --benchmarkName "ForAndForEachComparison.Comparison.ForEachLoop" --job "Default" --benchmarkId 1 in C:\Users\ysant\source\repos\ForAndForEachComparison\ForAndForEachComparison\bin\Release\netcoreapp2.2\21e7740f-0fdc-4fd0-8439-9d33cf90c76e\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.6 (CoreCLR 4.6.27817.03, CoreFX 4.6.27818.02), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 384728.99 ns, 384.7290 us/op
WorkloadJitting  1: 1 op, 1353297.91 ns, 1.3533 ms/op

OverheadJitting  2: 16 op, 424478.25 ns, 26.5299 us/op
WorkloadJitting  2: 16 op, 1125013.22 ns, 70.3133 us/op

WorkloadPilot    1: 16 op, 162279.05 ns, 10.1424 us/op
WorkloadPilot    2: 32 op, 316900.00 ns, 9.9031 us/op
WorkloadPilot    3: 64 op, 616660.41 ns, 9.6353 us/op
WorkloadPilot    4: 128 op, 1113343.71 ns, 8.6980 us/op
WorkloadPilot    5: 256 op, 2341194.45 ns, 9.1453 us/op
WorkloadPilot    6: 512 op, 4741465.76 ns, 9.2607 us/op
WorkloadPilot    7: 1024 op, 8301758.81 ns, 8.1072 us/op
WorkloadPilot    8: 2048 op, 18272986.19 ns, 8.9224 us/op
WorkloadPilot    9: 4096 op, 41505147.35 ns, 10.1331 us/op
WorkloadPilot   10: 8192 op, 63735189.76 ns, 7.7802 us/op
WorkloadPilot   11: 16384 op, 148041164.18 ns, 9.0357 us/op
WorkloadPilot   12: 32768 op, 264874425.19 ns, 8.0833 us/op
WorkloadPilot   13: 65536 op, 514331246.19 ns, 7.8481 us/op

OverheadWarmup   1: 65536 op, 122894.47 ns, 1.8752 ns/op
OverheadWarmup   2: 65536 op, 130187.92 ns, 1.9865 ns/op
OverheadWarmup   3: 65536 op, 218073.88 ns, 3.3275 ns/op
OverheadWarmup   4: 65536 op, 239589.53 ns, 3.6558 ns/op
OverheadWarmup   5: 65536 op, 121071.11 ns, 1.8474 ns/op
OverheadWarmup   6: 65536 op, 171031.18 ns, 2.6097 ns/op
OverheadWarmup   7: 65536 op, 148056.85 ns, 2.2592 ns/op

OverheadActual   1: 65536 op, 121071.11 ns, 1.8474 ns/op
OverheadActual   2: 65536 op, 121435.79 ns, 1.8530 ns/op
OverheadActual   3: 65536 op, 121071.11 ns, 1.8474 ns/op
OverheadActual   4: 65536 op, 113777.67 ns, 1.7361 ns/op
OverheadActual   5: 65536 op, 128364.56 ns, 1.9587 ns/op
OverheadActual   6: 65536 op, 137846.03 ns, 2.1034 ns/op
OverheadActual   7: 65536 op, 136387.34 ns, 2.0811 ns/op
OverheadActual   8: 65536 op, 256364.44 ns, 3.9118 ns/op
OverheadActual   9: 65536 op, 141128.08 ns, 2.1534 ns/op
OverheadActual  10: 65536 op, 130917.26 ns, 1.9976 ns/op
OverheadActual  11: 65536 op, 123259.15 ns, 1.8808 ns/op
OverheadActual  12: 65536 op, 122529.80 ns, 1.8697 ns/op
OverheadActual  13: 65536 op, 262199.19 ns, 4.0008 ns/op
OverheadActual  14: 65536 op, 165196.43 ns, 2.5207 ns/op
OverheadActual  15: 65536 op, 263293.21 ns, 4.0175 ns/op
OverheadActual  16: 65536 op, 124353.16 ns, 1.8975 ns/op
OverheadActual  17: 65536 op, 188170.77 ns, 2.8713 ns/op
OverheadActual  18: 65536 op, 114142.35 ns, 1.7417 ns/op
OverheadActual  19: 65536 op, 130552.59 ns, 1.9921 ns/op
OverheadActual  20: 65536 op, 152797.58 ns, 2.3315 ns/op

WorkloadWarmup   1: 65536 op, 625718859.74 ns, 9.5477 us/op
WorkloadWarmup   2: 65536 op, 330447197.31 ns, 5.0422 us/op
WorkloadWarmup   3: 65536 op, 928273022.66 ns, 14.1643 us/op
WorkloadWarmup   4: 65536 op, 351149263.91 ns, 5.3581 us/op
WorkloadWarmup   5: 65536 op, 343072507.74 ns, 5.2349 us/op
WorkloadWarmup   6: 65536 op, 319408574.90 ns, 4.8738 us/op
WorkloadWarmup   7: 65536 op, 1522290942.64 ns, 23.2283 us/op
WorkloadWarmup   8: 65536 op, 359532344.59 ns, 5.4860 us/op

// BeforeActualRun
WorkloadActual   1: 65536 op, 339452773.15 ns, 5.1796 us/op
WorkloadActual   2: 65536 op, 327806971.80 ns, 5.0019 us/op
WorkloadActual   3: 65536 op, 315169262.52 ns, 4.8091 us/op
WorkloadActual   4: 65536 op, 338882426.09 ns, 5.1709 us/op
WorkloadActual   5: 65536 op, 321707102.72 ns, 4.9089 us/op
WorkloadActual   6: 65536 op, 341375324.10 ns, 5.2090 us/op
WorkloadActual   7: 65536 op, 2862072649.96 ns, 43.6718 us/op
WorkloadActual   8: 65536 op, 411123955.67 ns, 6.2733 us/op
WorkloadActual   9: 65536 op, 356374284.79 ns, 5.4378 us/op
WorkloadActual  10: 65536 op, 324550085.88 ns, 4.9522 us/op
WorkloadActual  11: 65536 op, 331610136.42 ns, 5.0600 us/op
WorkloadActual  12: 65536 op, 324835624.08 ns, 4.9566 us/op
WorkloadActual  13: 65536 op, 328345957.06 ns, 5.0102 us/op
WorkloadActual  14: 65536 op, 336900068.92 ns, 5.1407 us/op
WorkloadActual  15: 65536 op, 320450078.22 ns, 4.8897 us/op
WorkloadActual  16: 65536 op, 337629048.32 ns, 5.1518 us/op
WorkloadActual  17: 65536 op, 330353476.60 ns, 5.0408 us/op
WorkloadActual  18: 65536 op, 321487570.15 ns, 4.9055 us/op
WorkloadActual  19: 65536 op, 365536304.92 ns, 5.5776 us/op
WorkloadActual  20: 65536 op, 330036941.28 ns, 5.0360 us/op
WorkloadActual  21: 65536 op, 320601052.44 ns, 4.8920 us/op
WorkloadActual  22: 65536 op, 393152917.92 ns, 5.9990 us/op

OutOfMemoryException!
BenchmarkDotNet continues to run additional iterations until desired accuracy level is achieved. It's possible only if the benchmark method doesn't have any side-effects.
If your benchmark allocates memory and keeps it alive, you are creating a memory leak.
You should redesign your benchmark and remove the side-effects. You can use `OperationsPerInvoke`, `IterationSetup` and `IterationCleanup` to do that.

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.
   at System.Collections.Generic.List`1.set_Capacity(Int32 value)
   at System.Collections.Generic.List`1.AddWithResize(T item)
   at ForAndForEachComparison.Comparison.ForEachLoop() in C:\Users\ysant\source\repos\ForAndForEachComparison\ForAndForEachComparison\Comparison.cs:line 39
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionUnroll(Int64 invokeCount) in C:\Users\ysant\source\repos\ForAndForEachComparison\ForAndForEachComparison\bin\Release\netcoreapp2.2\21e7740f-0fdc-4fd0-8439-9d33cf90c76e\21e7740f-0fdc-4fd0-8439-9d33cf90c76e.notcs:line 1372
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineStage.RunIteration(IterationMode mode, IterationStage stage, Int32 index, Int64 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.RunAuto(Int64 invokeCount, IterationMode iterationMode, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineActualStage.Run(Int64 invokeCount, IterationMode iterationMode, Boolean runAuto, Int32 unrollFactor, Boolean forceSpecific)
   at BenchmarkDotNet.Engines.Engine.Run()
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in C:\Users\ysant\source\repos\ForAndForEachComparison\ForAndForEachComparison\bin\Release\netcoreapp2.2\21e7740f-0fdc-4fd0-8439-9d33cf90c76e\21e7740f-0fdc-4fd0-8439-9d33cf90c76e.notcs:line 812
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\Users\ysant\source\repos\ForAndForEachComparison\ForAndForEachComparison\bin\Release\netcoreapp2.2\21e7740f-0fdc-4fd0-8439-9d33cf90c76e\21e7740f-0fdc-4fd0-8439-9d33cf90c76e.notcs:line 49
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


Successfully reverted power plan (GUID: 381b4222-f694-41f0-9685-ff5bb260df2e FriendlyName: Balanced)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\ForAndForEachComparison.Comparison-report.csv
  BenchmarkDotNet.Artifacts\results\ForAndForEachComparison.Comparison-report-github.md
  BenchmarkDotNet.Artifacts\results\ForAndForEachComparison.Comparison-report.html

// * Detailed results *
Comparison.ForLoop: DefaultJob
Runtime = ; GC = 
There are not any results runs

Comparison.ForEachLoop: DefaultJob
Runtime = ; GC = 
There are not any results runs

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.1 (1803/April2018Update/Redstone4)
Intel Core i7-6600U CPU 2.60GHz (Skylake), 1 CPU, 4 logical and 2 physical cores
Frequency=2742190 Hz, Resolution=364.6720 ns, Timer=TSC
.NET Core SDK=2.2.108
  [Host] : .NET Core 2.2.6 (CoreCLR 4.6.27817.03, CoreFX 4.6.27818.02), 64bit RyuJIT  [AttachedDebugger]


|      Method | Mean | Error |
|------------ |-----:|------:|
|     ForLoop |   NA |    NA |
| ForEachLoop |   NA |    NA |

Benchmarks with issues:
  Comparison.ForLoop: DefaultJob
  Comparison.ForEachLoop: DefaultJob

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger
  Summary -> Detected error exit code from one of the benchmarks. It might be caused by following antivirus software:
        - McAfee Endpoint Security (C:\Program Files (x86)\McAfee\Endpoint Security\Threat Prevention\AMCFG.EXE)
        - Windows Defender (windowsdefender://)
Use InProcessToolchain to avoid new process creation.


// * Legends *
  Mean  : Arithmetic mean of all measurements
  Error : Half of 99.9% confidence interval
  1 ns  : 1 Nanosecond (0.000000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:44 (44.21 sec), executed benchmarks: 2

Global total time: 00:01:06 (66.34 sec), executed benchmarks: 2
// * Artifacts cleanup *
